@page "/admin/product-types"
@inject IProductTypeService ProductTypeService


<h3>Tipos de producto</h3>


@foreach (var productType in ProductTypeService.ProductTypes)
{
    @if (productType.Editing)
    {
        <EditForm Model="currentProductType" OnSubmit="UpdateProductType">

            <div class="row">
                <div class="col">
                    <InputText @bind-Value="currentProductType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row">
            <div class="col">
                @productType.Name
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="(()=>EditProductType(productType))">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>

    }

}
<button class="btn btn-primary" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Añadir nuevo tipo de producto
</button>

@code {
    ProductType currentProductType = null;

    protected override async Task OnInitializedAsync()
    {
        //Inicializa la lista del ProductTypeService con todos los tipo de productos
        await ProductTypeService.GetProductTypes();
    }

    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        currentProductType = productType;
    }

    private void CreateNewProductType()
    {

    }
    private async Task UpdateProductType()
    {

    }
}
