@page "/cart"
@inject ICartService CartService


<PageTitle>Cesta de la compra</PageTitle>

<h3>Cesta de la compra</h3>

@if (cartProducts == null || cartProducts.Count == 0)
{
    <span>@message</span>
}
else
{
    <div>
        @foreach (var product in cartProducts)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                    <span>@product.ProductType</span><br />
                </div>
                <div class="cart-product-price">
                    @product.Price€
                </div>
            </div>
        }
        <div class="cart-product-price">
            Total (@cartProducts.Count): @cartProducts.Sum(product => @product.Price)€
        </div>
    </div>

}



@code {
    List<CartProductResponseDTO> cartProducts = null;
    string message = "Cargando productos...";


    protected override async Task OnInitializedAsync()
    {
        if ((await CartService.GetCartItems()).Count == 0)
        {
            message = "La cesta está vacía.";
            cartProducts = new List<CartProductResponseDTO>();
        }
        else
        {
            cartProducts = await CartService.GetCartProducts();
        }

    }


}